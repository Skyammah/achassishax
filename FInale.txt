local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kiwi-i/wallys-ui-fork/master/lib.lua", true))()
local main = library:CreateWindow("Main")
local speed = 1
local on = false
box = main:Box("Speed multiplier",{type="number"},function(new,old,enter)
   if enter then
       speed = tonumber(new)
   end
end)
box.Text = 1
main:Toggle("On/Off",{},function()
   on = not on
end)
main:Section("By JustToSeePosts")
local met = getrawmetatable(game)
setreadonly(met,false)
local old = met.__newindex
met.__newindex = function(t,k,v)
   if tostring(t) == "#AV" then
       if not on then return old(t,k,v) end
       if k == "angularvelocity" or k == "maxTorque" then
          return old(t,k,Vector3.new(v.X*speed,v.Y*speed,v.Z*speed))
       end
   end
   return old(t,k,v)
end
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "A-Chassis Suspension Tuner", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local Tab = Window:MakeTab({
	Name = "Suspension Tune",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = "Pre-Set Tunes"
})
Tab:AddButton({
	Name = "Cushion",
	Callback = function()
      		if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
            print(v)
        v.Stiffness = 1800
        v.MaxLength = 8
        v.FreeLength = 3
        v.MinLength = 1
        v.Damping = 200
        v.Coils = 8
            end
        end
    end
end    
})
Tab:AddButton({
	Name = "Troll (Drive in Reverse)",
	Callback = function()
      		if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
            print(v)
        v.Stiffness = 1200
        v.MaxLength = 50
        v.FreeLength = 20
        v.MinLength = 1
        v.Damping = 200
        v.Coils = 8
            end
        end
    end
end    
})
Tab:AddButton({
	Name = "Regular",
	Callback = function()
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
            print(v)
        v.Stiffness = 4800
        v.MaxLength = 5
        v.FreeLength = 2.5
        v.MinLength = 1
        v.Damping = 200
        v.Coils = 8
            end
        end
    end
end    
})
local Tab2 = Window:MakeTab({
	Name = "Custom Tune",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab2:AddSlider({
	Name = "Max Length",
	Min = 0,
	Max = 20,
	Default = 5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.1,
	ValueName = "Length",
	Callback = function(Value)
		local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local table = { }
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
    v.MaxLength = Value
end
end
end
	end    
})
Tab2:AddSlider({
	Name = "Free Length",
	Min = 0,
	Max = 20,
	Default = 2.5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.1,
	ValueName = "Length",
	Callback = function(Value)
		local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local table = { }
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
    v.FreeLength = Value
end
end
end
	end    
})
Tab2:AddSlider({
	Name = "Min Length",
	Min = 0,
	Max = 20,
	Default = 1,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.1,
	ValueName = "Length",
	Callback = function(Value)
		local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local table = { }
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
    v.MinLength = Value
end
end
end
	end    
})
Tab2:AddSlider({
	Name = "Damping",
	Min = 0,
	Max = 1000,
	Default = 200,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Damp",
	Callback = function(Value)
local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local table = { }
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
    v.Damping = Value
end
end
end
	end    
})
Tab2:AddSlider({
	Name = "Stiffness",
	Min = 0,
	Max = 20000,
	Default = 480,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Stiffness",
	Callback = function(Value)
		local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local table = { }
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
    v.Stiffness = Value
end
end
end
	end    
})
Tab2:AddSlider({
	Name = "Coils",
	Min = 0,
	Max = 100,
	Default = 8,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Coils",
	Callback = function(Value)
local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
local table = { }
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
    v.Coils = Value
end
end
end
	end  
})
local Tab3 = Window:MakeTab({
	Name = "Individual Wheel",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Tab3:AddButton({
	Name = "Refresh Car",
Callback = function()
task.spawn(function()
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
        if v:IsA("SpringConstraint") then
            print(v)
        v.Stiffness = 4801
        v.MaxLength = 5
        v.FreeLength = 2.5
        v.MinLength = 1
        v.Damping = 200
        v.Coils = 8
            end
        end
    end
end)
task.spawn(function()
--suspension definer
local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
i = 0
f = 0
b = 0
for f = 1, 5 do
wait()
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Stiffness ~= 4800 then
    cha = v
    i = i + 1
    print(i)
end
end
end
cha.Name = "Spring" .. tostring(i)
cha.Stiffness = 4800
end
end)
end
})
local Section = Tab3:AddSection({
	Name = "Wheel toggles"
})
Tab3:AddToggle({
	Name = "Spring 1",
	Default = false,
	Callback = function(Value)
		spring1 = Value
	end    
})
Tab3:AddToggle({
	Name = "Spring 2",
	Default = false,
	Callback = function(Value)
		spring2 = Value
	end    
})
Tab3:AddToggle({
	Name = "Spring 3",
	Default = false,
	Callback = function(Value)
		spring3 = Value
	end    
})
Tab3:AddToggle({
	Name = "Spring 4",
	Default = false,
	Callback = function(Value)
		spring4 = Value
	end    
})
local Section = Tab3:AddSection({
	Name = "Length control"
})
Tab3:AddSlider({
	Name = "Max Length",
	Min = 0,
	Max = 20,
	Default = 10,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.1,
	ValueName = "Length",
	Callback = function(Value)
    if spring1 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring4" then
    v.MaxLength = Value
end
end
end
    end
    if spring2 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring7" then
    v.MaxLength = Value
end
end
end   
    end
    if spring3 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring9" then
    v.MaxLength = Value
end
end
end  
    end
    if spring4 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring10" then
    v.MaxLength = Value
end
end
end
    end
end
})
Tab3:AddSlider({
	Name = "Free Length",
	Min = 0,
	Max = 20,
	Default = 2.5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.1,
	ValueName = "Length",
	Callback = function(Value)
    if spring1 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring4" then
    v.FreeLength = Value
end
end
end
    end
    if spring2 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring7" then
    v.FreeLength = Value
end
end
end   
    end
    if spring3 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring9" then
    v.FreeLength = Value
end
end
end  
    end
    if spring4 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring10" then
    v.FreeLength = Value
end
end
end
    end
end
})
Tab3:AddSlider({
	Name = "Min Length",
	Min = 0,
	Max = 20,
	Default = 1,
	Color = Color3.fromRGB(255,255,255),
	Increment = 0.1,
	ValueName = "Length",
	Callback = function(Value)
    if spring1 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring4" then
    v.MinLength = Value
end
end
end
    end
    if spring2 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring7" then
    v.MinLength = Value
end
end
end   
    end
    if spring3 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring9" then
    v.MinLength = Value
end
end
end  
    end
    if spring4 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring10" then
    v.MinLength = Value
end
end
end
    end
end
})
local Section = Tab3:AddSection({
	Name = "Suspension Control"
})
Tab3:AddSlider({
	Name = "Stiffness",
	Min = 0,
	Max = 20000,
	Default = 480,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Stiffness",
	Callback = function(Value)
    if spring1 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring4" then
    v.Stiffness = Value
end
end
end
    end
    if spring2 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring7" then
    v.Stiffness = Value
end
end
end   
    end
    if spring3 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring9" then
    v.Stiffness = Value
end
end
end  
    end
    if spring4 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring10" then
    v.Stiffness = Value
end
end
end
    end
end
})
Tab3:AddSlider({
	Name = "Damping",
	Min = 0,
	Max = 1000,
	Default = 200,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Damp",
	Callback = function(Value)
    if spring1 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring4" then
    v.Damping = Value
end
end
end
    end
    if spring2 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring7" then
    v.Damping = Value
end
end
end   
    end
    if spring3 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring9" then
    v.Damping = Value
end
end
end  
    end
    if spring4 == true then
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("SpringConstraint") and v.Name == "Spring10" then
    v.Damping = Value
end
end
end
    end
end
})
local Tab4 = Window:MakeTab({
	Name = "Weight Tune",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = Tab4:AddSection({
	Name = "Weight Tuning"
})
Tab4:AddTextbox({
	Name = "Increment",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		print(Value)
    Increment = Value
	end	  
})
local Section = Tab4:AddSection({
	Name = "X"
})
Tab4:AddButton({
	Name = "Add Increment Weight",
	Callback = function()
local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("Part") and v.Name == "#Weight" or v.Name == "Weight" then
    v.Size = v.Size + Vector3.new(Increment,0,0)
        OrionLib:MakeNotification({
	Name = "Weight:",
	Content = tostring(v.Size),
	Image = "rbxassetid://4483345998",
	Time = 5
})
end
end
end
end    
})
Tab4:AddButton({
	Name = "Lose Increment Weight",
	Callback = function()
	    local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("Part") and v.Name == "#Weight" or v.Name == "Weight" then
    v.Size = v.Size + Vector3.new(-Increment,0,0)
        OrionLib:MakeNotification({
	Name = "Weight:",
	Content = tostring(v.Size),
	Image = "rbxassetid://4483345998",
	Time = 5
})
end
end
end
end    
})
local Section = Tab4:AddSection({
	Name = "Y"
})
Tab4:AddButton({
	Name = "Add Increment Weight",
	Callback = function()
	    local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("Part") and v.Name == "#Weight" or v.Name == "Weight" then
    v.Size = v.Size + Vector3.new(0,Increment,0)
        OrionLib:MakeNotification({
	Name = "Weight:",
	Content = tostring(v.Size),
	Image = "rbxassetid://4483345998",
	Time = 5
})
end
end
end
end    
})
Tab4:AddButton({
	Name = "Lose Increment Weight",
	Callback = function()
	    local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("Part") and v.Name == "#Weight" or v.Name == "Weight" then
    v.Size = v.Size + Vector3.new(0,-Increment,0)
    OrionLib:MakeNotification({
	Name = "Weight:",
	Content = tostring(v.Size),
	Image = "rbxassetid://4483345998",
	Time = 5
})
end
end
end
end    
})
local Section = Tab4:AddSection({
	Name = "Z"
})
Tab4:AddButton({
	Name = "Add Increment Weight",
	Callback = function()
	    local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("Part") and v.Name == "#Weight" or v.Name == "Weight" then
    v.Size = v.Size + Vector3.new(0,0,Increment)
        OrionLib:MakeNotification({
	Name = "Weight:",
	Content = tostring(v.Size),
	Image = "rbxassetid://4483345998",
	Time = 5
})
end
end
end
end    
})
Tab4:AddButton({
	Name = "Lose Increment Weight",
	Callback = function()
	    local speaker = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name
if speaker.Character:FindFirstChildOfClass('Humanoid') and speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart then
local v = speaker.Character:FindFirstChildOfClass('Humanoid').SeatPart
    for _, v in pairs (v.Parent:GetDescendants()) do
            if v:IsA("Part") and v.Name == "#Weight" or v.Name == "Weight" then
    v.Size = v.Size + Vector3.new(0,0,-Increment)
        OrionLib:MakeNotification({
	Name = "Weight:",
	Content = tostring(v.Size),
	Image = "rbxassetid://4483345998",
	Time = 5
})
